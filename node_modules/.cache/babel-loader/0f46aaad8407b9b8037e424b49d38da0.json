{"ast":null,"code":"var _jsxFileName = \"/Users/cruser/Development/code/Mod5/react-crypto/src/components/LineGraph.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n  datasets: [{\n    label: 'Porfolio Return',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [1500000, 3900000, 3000000, 4100000, 2300000, 1800000, 2000000]\n  }]\n};\nconst lineOptions = {\n  scales: {\n    xAxes: [{\n      gridLines: {\n        display: false\n      }\n    }],\n    yAxes: [{\n      // stacked: true,\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true,\n\n        // Return an empty string to draw the tick line but hide the tick label\n        // Return `null` or `undefined` to hide the tick line entirely\n        userCallback(value) {\n          // Convert the number to a string and splite the string every 3 charaters from the end\n          value = value.toString();\n          value = value.split(/(?=(?:...)*$)/); // Convert the array to a string and format the output\n\n          value = value.join('.');\n          return `Rp.${value}`;\n        }\n\n      }\n    }]\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  }\n};\n\nfunction LineGraph() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: lineOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/cruser/Development/code/Mod5/react-crypto/src/components/LineGraph.js"],"names":["React","Line","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","lineOptions","scales","xAxes","gridLines","display","yAxes","ticks","beginAtZero","userCallback","value","toString","split","join","legend","tooltips","enabled","LineGraph"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CADC;AAETC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,sBAJnB;AAKEC,IAAAA,WAAW,EAAE,oBALf;AAMEC,IAAAA,cAAc,EAAE,MANlB;AAOEC,IAAAA,UAAU,EAAE,EAPd;AAQEC,IAAAA,gBAAgB,EAAE,GARpB;AASEC,IAAAA,eAAe,EAAE,OATnB;AAUEC,IAAAA,gBAAgB,EAAE,oBAVpB;AAWEC,IAAAA,oBAAoB,EAAE,MAXxB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,gBAAgB,EAAE,CAbpB;AAcEC,IAAAA,yBAAyB,EAAE,oBAd7B;AAeEC,IAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,IAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,IAAAA,WAAW,EAAE,CAjBf;AAkBEC,IAAAA,cAAc,EAAE,EAlBlB;AAmBEpB,IAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD;AAnBR,GADQ;AAFD,CAAb;AA2BA,MAAMqB,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CAAC;AACNC,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAE;AADA;AADL,KAAD,CADD;AAMNC,IAAAA,KAAK,EAAE,CAAC;AACN;AACAF,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAE;AADA,OAFL;AAKNE,MAAAA,KAAK,EAAE;AACLC,QAAAA,WAAW,EAAE,IADR;;AAEL;AACA;AACAC,QAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACC,QAAN,EAAR;AACAD,UAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,eAAZ,CAAR,CAHkB,CAKlB;;AACAF,UAAAA,KAAK,GAAGA,KAAK,CAACG,IAAN,CAAW,GAAX,CAAR;AACA,iBAAQ,MAAKH,KAAM,EAAnB;AACD;;AAZI;AALD,KAAD;AAND,GADQ;AA4BhBI,EAAAA,MAAM,EAAE;AACNT,IAAAA,OAAO,EAAE;AADH,GA5BQ;AA+BhBU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AADD;AA/BM,CAApB;;AAoCA,SAASC,SAAT,GAAqB;AACnB,sBACE;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAErC,IAAZ;AAAkB,MAAA,OAAO,EAAEqB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQgB,S;AAQT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst data = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n    datasets: [\n      {\n        label: 'Porfolio Return',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [1500000, 3900000, 3000000, 4100000, 2300000, 1800000, 2000000],\n      }\n    ]\n}\n\nconst lineOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n        },\n      }],\n      yAxes: [{\n        // stacked: true,\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          // Return an empty string to draw the tick line but hide the tick label\n          // Return `null` or `undefined` to hide the tick line entirely\n          userCallback(value) {\n            // Convert the number to a string and splite the string every 3 charaters from the end\n            value = value.toString();\n            value = value.split(/(?=(?:...)*$)/);\n  \n            // Convert the array to a string and format the output\n            value = value.join('.');\n            return `Rp.${value}`;\n          },\n        },\n      }],\n    },\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      enabled: false,\n    },\n}\n\nfunction LineGraph() {\n  return (\n    <div>\n        <Line data={data} options={lineOptions} />\n    </div>\n  )\n}\n\nexport default LineGraph"]},"metadata":{},"sourceType":"module"}