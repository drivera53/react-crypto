{"ast":null,"code":"var _jsxFileName = \"/Users/cruser/Development/code/Mod5/react-crypto/src/components/TradeCryptoHistoryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, UseEffect } from 'react';\nimport StockMiniChart from \"./stock_mini_chart.svg\";\nimport './CryptoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TradeCryptoHistoryList = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('name');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cryptoList\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cryptoList__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Trading history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Sort by name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"price\",\n            children: \"Sort by price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"quantity\",\n            children: \"Sort by quantity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto__content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto__rows\",\n          children: this.props.portfolioData.trades.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: c.coin_id,\n            className: \"row\",\n            name: c.name,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row__image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: c.image,\n                alt: c.name,\n                height: 40\n              }, c.coin_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row__intro\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: c.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Fill date: \", c.created_at]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row__mini_chart\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: StockMiniChart,\n                height: 35,\n                alt: \"Mini-chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row__numbers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Trade type: \", c.trade_type.toUpperCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row__price\",\n                children: [\"Filled quantity: \", c.quantity, \" \", c.symbol.toUpperCase(), \" at $\", c.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TradeCryptoHistoryList, \"vYvbfv2/5+/jvwrz++vT909RG+4=\");\n\n_c = TradeCryptoHistoryList;\nexport default TradeCryptoHistoryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradeCryptoHistoryList\");","map":{"version":3,"sources":["/Users/cruser/Development/code/Mod5/react-crypto/src/components/TradeCryptoHistoryList.js"],"names":["React","useState","UseEffect","TradeCryptoHistoryList","data","setData","sortType","setSortType","props","portfolioData","trades","map","c","coin_id","name","image","created_at","StockMiniChart","trade_type","toUpperCase","quantity","symbol","price"],"mappings":"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","sourcesContent":["import React, { useState, UseEffect } from 'react'\nimport StockMiniChart from './stock_mini_chart.svg'\n\nimport './CryptoList.css'\n\nexport const TradeCryptoHistoryList = () => {\n    const [data, setData] = useState([])\n    const [sortType, setSortType] = useState('name')\n    return (\n        <div className=\"cryptoList\">\n            <div className=\"cryptoList__container\">\n                <div className=\"crypto__header\">\n                    <h1>Trading history</h1>\n                    <button type=\"button\">Refresh</button>\n                    <select>\n                        <option value=\"name\">Sort by name:</option>\n                        <option value=\"price\">Sort by price:</option>\n                        <option value=\"quantity\">Sort by quantity:</option>\n                    </select>\n                </div>\n                <div className=\"crypto__content\">\n                    <div className=\"crypto__rows\">\n                        {this.props.portfolioData.trades.map(c =>(\n                            <div id={c.coin_id} className=\"row\" name={c.name}>\n                                <div className=\"row__image\">\n                                    <img key={c.coin_id} src={c.image} alt={c.name} height={40}/>\n                                </div>\n                                <div className=\"row__intro\">\n                                    <h1>{c.name}</h1>\n                                    <p>Fill date: {c.created_at}</p>\n                                </div>\n                                <div className=\"row__mini_chart\">\n                                    <img src={StockMiniChart} height={35} alt=\"Mini-chart\"/>\n                                </div>\n                                <div className=\"row__numbers\">\n                                    <p>Trade type: {c.trade_type.toUpperCase()}</p>\n                                    <p className=\"row__price\">Filled quantity: {c.quantity} {c.symbol.toUpperCase()} at ${c.price}</p>\n                                </div> \n                            </div> \n                        ))}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default TradeCryptoHistoryList\n"]},"metadata":{},"sourceType":"module"}