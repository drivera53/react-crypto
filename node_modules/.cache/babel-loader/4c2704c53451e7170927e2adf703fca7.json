{"ast":null,"code":"var _jsxFileName = \"/Users/cruser/Development/code/Mod5/react-crypto/src/components/TradeCrypto.js\";\n// import React, { Component } from 'react'\nimport React from 'react';\nimport './Crypto.css';\nimport LineGraph from './LineGraph';\nimport MyHoldings from './MyHoldings';\nimport { createTradeFetch } from '../actions/portfolioActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TradeCrypto extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: this.props.crypto.name,\n      trade_type: \"buy\",\n      coin_id: this.props.crypto.id,\n      average_cost: Number(this.props.crypto.current_price),\n      quantity: '',\n      portfolio_id: this.props.portfolioData.id\n    };\n\n    this.displayMyHoldings = () => {\n      const foundPorfolioCoin = this.props.portfolioData.coins.find(p => p.coin_id === this.props.crypto.id);\n      if (typeof foundPorfolioCoin != \"undefined\") return /*#__PURE__*/_jsxDEV(MyHoldings, {\n        coinData: foundPorfolioCoin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    };\n\n    this.handleQuantityChange = event => {\n      this.setState({\n        quantity: Number(event.target.value)\n      }); // console.log(this.state)\n    };\n\n    this.buySellChange = event => {\n      this.setState({\n        trade_type: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state); // this.props.createTradeFetch(this.state)\n      // this.props.createTradeFetch(this.state)\n\n      this.setState({\n        quantity: \"\"\n      });\n    };\n  }\n\n  render() {\n    const portfolioData = this.props.portfolioData; // const foundPorfolioCoin = portfolioData.coins.find(p=> p.coin_id === this.props.crypto.id)\n\n    const {\n      id,\n      coin_id,\n      symbol,\n      name,\n      image,\n      current_price,\n      market_cap,\n      market_cap_rank,\n      total_volume,\n      high_24h,\n      low_24h,\n      price_change_24h,\n      price_change_percentage_24h,\n      market_cap_change_24h,\n      market_cap_change_percentage_24h,\n      circulating_supply,\n      total_supply,\n      price_change_percentage_1h_in_currency,\n      average_cost,\n      quantity,\n      total_value,\n      total_return,\n      total_return_percentage\n    } = this.props.crypto;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cryptoList\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cryptoList__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crypto__header_medium\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: name,\n              height: 80\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [name, \" (\", symbol.toUpperCase(), \") $\", Number(current_price).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [Number(price_change_percentage_24h).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard__chart\",\n              children: /*#__PURE__*/_jsxDEV(LineGraph, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crypto__content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: name,\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row__intro\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Market Cap Rank: #\", market_cap_rank]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Trading Volume: $\", total_volume]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"24h Low/24h High: $\", low_24h, \"/$\", high_24h]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row__intro\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Market Cap: $\", market_cap]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Circulating Supply: \", circulating_supply]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Price Change 24h: $\", price_change_24h]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row__intro\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Market Cap Change 24h: $\", market_cap_change_24h, \" (\", Number(market_cap_change_percentage_24h).toFixed(2), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Supply: \", total_supply]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Price Change Percentage 1h: \", Number(price_change_percentage_1h_in_currency).toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crypto__header\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Buying Power: $\", Number(portfolioData.buying_power).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), this.displayMyHoldings(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crypto__header_medium\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You can buy up to \", Number(portfolioData.buying_power / current_price).toFixed(1), \" \", name, \" coins.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Trade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"quantity\",\n                placeholder: \"Quantity\",\n                onChange: this.handleQuantityChange,\n                value: this.state.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"buySell\",\n                onChange: this.buySellChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"buy\",\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"sell\",\n                  children: \"Sell\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"Total: $\", (this.state.quantity * current_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createTradeFetch: tradeInfo => dispatch(createTradeFetch(tradeInfo))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TradeCrypto);","map":{"version":3,"sources":["/Users/cruser/Development/code/Mod5/react-crypto/src/components/TradeCrypto.js"],"names":["React","LineGraph","MyHoldings","createTradeFetch","connect","TradeCrypto","Component","state","name","props","crypto","trade_type","coin_id","id","average_cost","Number","current_price","quantity","portfolio_id","portfolioData","displayMyHoldings","foundPorfolioCoin","coins","find","p","handleQuantityChange","event","setState","target","value","buySellChange","handleSubmit","preventDefault","console","log","render","symbol","image","market_cap","market_cap_rank","total_volume","high_24h","low_24h","price_change_24h","price_change_percentage_24h","market_cap_change_24h","market_cap_change_percentage_24h","circulating_supply","total_supply","price_change_percentage_1h_in_currency","total_value","total_return","total_return_percentage","toUpperCase","toFixed","buying_power","mapDispatchToProps","dispatch","tradeInfo"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,OAAO,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAC7CC,KAD6C,GACrC;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,IADpB;AAEJG,MAAAA,UAAU,EAAE,KAFR;AAGJC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,EAHvB;AAIJC,MAAAA,YAAY,EAAEC,MAAM,CAAC,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,aAAnB,CAJhB;AAKJC,MAAAA,QAAQ,EAAE,EALN;AAMJC,MAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWU,aAAX,CAAyBN;AANnC,KADqC;;AAAA,SAU7CO,iBAV6C,GAUzB,MAAM;AACtB,YAAMC,iBAAiB,GAAG,KAAKZ,KAAL,CAAWU,aAAX,CAAyBG,KAAzB,CAA+BC,IAA/B,CAAoCC,CAAC,IAAGA,CAAC,CAACZ,OAAF,KAAc,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,EAAxE,CAA1B;AACA,UAAG,OAAOQ,iBAAP,IAA4B,WAA/B,EACI,oBAAO,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACP,KAd4C;;AAAA,SAgB7CI,oBAhB6C,GAgBtBC,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAEF,MAAM,CAACW,KAAK,CAACE,MAAN,CAAaC,KAAd;AADN,OAAd,EAD4B,CAI5B;AACH,KArB4C;;AAAA,SAuB7CC,aAvB6C,GAuB7BJ,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AACVhB,QAAAA,UAAU,EAAEe,KAAK,CAACE,MAAN,CAAaC;AADf,OAAd;AAGH,KA3B4C;;AAAA,SA6B7CE,YA7B6C,GA6B9BL,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACM,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB,EAFoB,CAGpB;AACA;;AACA,WAAKoB,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH,KArC4C;AAAA;;AAuC7CkB,EAAAA,MAAM,GAAG;AACL,UAAMhB,aAAa,GAAG,KAAKV,KAAL,CAAWU,aAAjC,CADK,CAEL;;AACA,UAAM;AAACN,MAAAA,EAAD;AAAKD,MAAAA,OAAL;AAAcwB,MAAAA,MAAd;AAAsB5B,MAAAA,IAAtB;AAA4B6B,MAAAA,KAA5B;AAAmCrB,MAAAA,aAAnC;AAAkDsB,MAAAA,UAAlD;AAA8DC,MAAAA,eAA9D;AAA+EC,MAAAA,YAA/E;AAA6FC,MAAAA,QAA7F;AAAuGC,MAAAA,OAAvG;AAAgHC,MAAAA,gBAAhH;AAAkIC,MAAAA,2BAAlI;AAA+JC,MAAAA,qBAA/J;AAAsLC,MAAAA,gCAAtL;AAAwNC,MAAAA,kBAAxN;AAA4OC,MAAAA,YAA5O;AAA0PC,MAAAA,sCAA1P;AAAkSnC,MAAAA,YAAlS;AAAgTG,MAAAA,QAAhT;AAA0TiC,MAAAA,WAA1T;AAAuUC,MAAAA,YAAvU;AAAqVC,MAAAA;AAArV,QAAgX,KAAK3C,KAAL,CAAWC,MAAjY;AACA,wBACI;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI;AAAgB,cAAA,GAAG,EAAE2B,KAArB;AAA4B,cAAA,GAAG,EAAE7B,IAAjC;AAAuC,cAAA,MAAM,EAAE;AAA/C,eAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yBAAKA,IAAL,QAAa4B,MAAM,CAACiB,WAAP,EAAb,SAAsCtC,MAAM,CAACC,aAAD,CAAN,CAAsBsC,OAAtB,CAA8B,CAA9B,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,yBAAKvC,MAAM,CAAC6B,2BAAD,CAAN,CAAoCU,OAApC,CAA4C,CAA5C,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,qCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAWI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACI;AAAK,cAAA,EAAE,EAAE9C,IAAT;AAAe,cAAA,SAAS,EAAC,KAAzB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAA,mDAAsB+B,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,kDAAqBC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,oDAAuBE,OAAvB,QAAkCD,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAA,8CAAiBH,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,qDAAwBS,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,oDAAuBJ,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAWI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACA;AAAA,yDAA4BE,qBAA5B,QAAqD9B,MAAM,CAAC+B,gCAAD,CAAN,CAAyCQ,OAAzC,CAAiD,CAAjD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA;AAAA,+CAAkBN,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,eAGI;AAAA,6DAAgCjC,MAAM,CAACkC,sCAAD,CAAN,CAA+CK,OAA/C,CAAuD,CAAvD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAiCI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACI;AAAA,4CAAoBvC,MAAM,CAACI,aAAa,CAACoC,YAAf,CAAN,CAAmCD,OAAnC,CAA2C,CAA3C,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAjCJ,EAqCK,KAAKlC,iBAAL,EArCL,eAuCI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACI;AAAM,cAAA,QAAQ,EAAE,KAAKW,YAArB;AAAA,sCACI;AAAA,iDAAsBhB,MAAM,CAACI,aAAa,CAACoC,YAAd,GAA2BvC,aAA5B,CAAN,CAAiDsC,OAAjD,CAAyD,CAAzD,CAAtB,OAAoF9C,IAApF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AACI,gBAAA,IAAI,EAAC,UADT;AAEI,gBAAA,WAAW,EAAC,UAFhB;AAGI,gBAAA,QAAQ,EAAE,KAAKiB,oBAHnB;AAII,gBAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWU;AAJtB;AAAA;AAAA;AAAA;AAAA,sBALJ,eAWI;AAAQ,gBAAA,EAAE,EAAC,SAAX;AAAqB,gBAAA,QAAQ,EAAE,KAAKa,aAApC;AAAA,wCACI;AAAQ,kBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ,eAeI;AAAA;AAAA;AAAA;AAAA,sBAfJ,eAgBI;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAhBJ,eAiBI;AAAA,uCAAa,CAAC,KAAKvB,KAAL,CAAWU,QAAX,GAAsBD,aAAvB,EAAsCsC,OAAtC,CAA8C,CAA9C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAmEH;;AA9G4C;;AAiHjD,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHtD,IAAAA,gBAAgB,EAAGuD,SAAD,IAAeD,QAAQ,CAACtD,gBAAgB,CAACuD,SAAD,CAAjB;AADtC,GAAP;AAGH,CAJD;;AAMA,eAAetD,OAAO,CAAC,IAAD,EAAOoD,kBAAP,CAAP,CAAkCnD,WAAlC,CAAf","sourcesContent":["// import React, { Component } from 'react'\nimport React from 'react'\nimport './Crypto.css'\nimport LineGraph from './LineGraph'\nimport MyHoldings from './MyHoldings'\nimport { createTradeFetch } from '../actions/portfolioActions'\nimport { connect } from 'react-redux'\n\nexport class TradeCrypto extends React.Component {\n    state = {\n        name: this.props.crypto.name,\n        trade_type: \"buy\",\n        coin_id: this.props.crypto.id,\n        average_cost: Number(this.props.crypto.current_price),\n        quantity: '',\n        portfolio_id: this.props.portfolioData.id\n    }\n\n    displayMyHoldings = () => {\n        const foundPorfolioCoin = this.props.portfolioData.coins.find(p=> p.coin_id === this.props.crypto.id)\n        if(typeof foundPorfolioCoin != \"undefined\")\n            return <MyHoldings coinData={foundPorfolioCoin}/>\n    }\n\n    handleQuantityChange = event => {\n        this.setState({\n            quantity: Number(event.target.value)\n        })\n        // console.log(this.state)\n    }\n\n    buySellChange = event => {\n        this.setState({\n            trade_type: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        console.log(this.state)\n        // this.props.createTradeFetch(this.state)\n        // this.props.createTradeFetch(this.state)\n        this.setState({\n            quantity: \"\"\n        })\n    }\n\n    render() {\n        const portfolioData = this.props.portfolioData\n        // const foundPorfolioCoin = portfolioData.coins.find(p=> p.coin_id === this.props.crypto.id)\n        const {id, coin_id, symbol, name, image, current_price, market_cap, market_cap_rank, total_volume, high_24h, low_24h, price_change_24h, price_change_percentage_24h, market_cap_change_24h, market_cap_change_percentage_24h, circulating_supply, total_supply, price_change_percentage_1h_in_currency, average_cost, quantity, total_value, total_return, total_return_percentage} = this.props.crypto\n        return (\n            <>\n            <div className=\"cryptoList\">\n                <div className=\"cryptoList__container\">\n                    {/* <h1>Buying Power: ${(current_portfolio.current_balance * 1).toFixed(2)}</h1> */}\n                    <div className=\"crypto__header_medium\">\n                        <img key={name} src={image} alt={name} height={80}/>\n                        <h1>{name} ({symbol.toUpperCase()}) ${Number(current_price).toFixed(2)}</h1>\n                        <h3>{Number(price_change_percentage_24h).toFixed(2)}%</h3>\n                        <div className=\"dashboard__chart\">\n                            <LineGraph />\n                        </div>\n                    </div>\n                    \n                    <div className=\"crypto__content\">\n                        <div id={name} className=\"row\">\n                            <div className=\"row__intro\">\n                                <p>Market Cap Rank: #{market_cap_rank}</p>\n                                <p>Trading Volume: ${total_volume}</p>\n                                <p>24h Low/24h High: ${low_24h}/${high_24h}</p>\n                            </div>\n                            <div className=\"row__intro\">\n                                <p>Market Cap: ${market_cap}</p>\n                                <p>Circulating Supply: {circulating_supply}</p>\n                                <p>Price Change 24h: ${price_change_24h}</p>\n                            </div>\n                            <div className=\"row__intro\">\n                            <p>Market Cap Change 24h: ${market_cap_change_24h} ({Number(market_cap_change_percentage_24h).toFixed(2)}%)</p>\n                            <p>Total Supply: {total_supply}</p>\n                                <p>Price Change Percentage 1h: {Number(price_change_percentage_1h_in_currency).toFixed(2)}%</p>\n                                \n    \n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"crypto__header\">\n                        <h1>Buying Power: ${Number(portfolioData.buying_power).toFixed(2)}</h1>\n                    </div>\n\n                    {this.displayMyHoldings()}\n\n                    <div className=\"crypto__header_medium\">\n                        <form onSubmit={this.handleSubmit}>\n                            <p>You can buy up to {Number(portfolioData.buying_power/current_price).toFixed(1)} {name} coins.</p>\n                            <h1>Trade</h1>\n                            <label>Quantity:</label>\n                            <br></br>\n                            <input\n                                name=\"quantity\"\n                                placeholder=\"Quantity\"\n                                onChange={this.handleQuantityChange}\n                                value={this.state.quantity}\n                            />\n                            <select id=\"buySell\" onChange={this.buySellChange}>\n                                <option value=\"buy\">Buy</option>\n                                <option value=\"sell\">Sell</option>\n                            </select>\n                            <br></br>\n                            <input type='submit'/>\n                            <h1>Total: ${(this.state.quantity * current_price).toFixed(2)}</h1>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            </>\n        ) \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createTradeFetch: (tradeInfo) => dispatch(createTradeFetch(tradeInfo))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(TradeCrypto)"]},"metadata":{},"sourceType":"module"}