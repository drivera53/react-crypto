{"ast":null,"code":"export const addPortfolio = portfolioObj => {\n  return {\n    type: 'ADD_PORTFOLIO',\n    payload: portfolioObj\n  };\n};\nexport function fetchPortfolio() {\n  return dispatch => {\n    return fetch(`http://localhost:3001/portfolios/1`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => {\n      if (data.error) {\n        alert(data.error);\n      } else {\n        dispatch(addPortfolio(data));\n      }\n    });\n  };\n}\nexport const createTrade = tradeObj => {\n  return {\n    type: 'CREATE_TRADE',\n    payload: tradeObj\n  };\n};\nexport function createTradeFetch(tradeInfo) {\n  return dispatch => fetch(`http://localhost:3001/trades`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify(tradeInfo)\n  }).then(r => r.json()).then(data => {\n    if (data.error) {\n      alert(data.error);\n    } else {\n      // console.log(\"Created!\")\n      // let user_json = JSON.parse(data.user)\n      let trade_json = JSON.parse(data.portfolio); // console.log(data)\n\n      dispatch(createTrade(trade_json));\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cruser/Development/code/Mod5/react-crypto/src/actions/portfolioActions.js"],"names":["addPortfolio","portfolioObj","type","payload","fetchPortfolio","dispatch","fetch","method","headers","Accept","then","resp","json","data","error","alert","createTrade","tradeObj","createTradeFetch","tradeInfo","body","JSON","stringify","r","trade_json","parse","portfolio"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAGC,YAAY,IAAI;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,eADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,SAASG,cAAT,GAA0B;AAC7B,SAAOC,QAAQ,IAAE;AACb,WAAOC,KAAK,CAAE,oCAAF,EAAuC;AAC/CC,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,MAAM,EAAE;AAFH;AAFsC,KAAvC,CAAL,CAONC,IAPM,CAODC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPP,EAQNF,IARM,CAQDG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,QAAAA,KAAK,CAACF,IAAI,CAACC,KAAN,CAAL;AACH,OAFD,MAEO;AACHT,QAAAA,QAAQ,CAACL,YAAY,CAACa,IAAD,CAAb,CAAR;AACH;AACJ,KAdM,CAAP;AAeH,GAhBD;AAiBH;AAED,OAAO,MAAMG,WAAW,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,IAAI,EAAE,cADH;AAEHC,IAAAA,OAAO,EAAEc;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAoC;AACvC,SAAOd,QAAQ,IAAIC,KAAK,CAAE,8BAAF,EAAiC;AACrDC,IAAAA,MAAM,EAAE,MAD6C;AAErDC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,gBAAU;AAFL,KAF4C;AAMrDY,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,SAAf;AAN+C,GAAjC,CAAL,CAQlBT,IARkB,CAQba,CAAC,IAAEA,CAAC,CAACX,IAAF,EARU,EASlBF,IATkB,CASbG,IAAI,IAAE;AACR,QAAGA,IAAI,CAACC,KAAR,EAAc;AACVC,MAAAA,KAAK,CAACF,IAAI,CAACC,KAAN,CAAL;AACH,KAFD,MAEO;AACH;AACA;AACA,UAAIU,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAWZ,IAAI,CAACa,SAAhB,CAAjB,CAHG,CAIH;;AACArB,MAAAA,QAAQ,CAACW,WAAW,CAACQ,UAAD,CAAZ,CAAR;AACH;AACJ,GAnBkB,CAAnB;AAoBH","sourcesContent":["export const addPortfolio = portfolioObj => {\n    return {\n        type: 'ADD_PORTFOLIO',\n        payload: portfolioObj\n    }\n}\n\nexport function fetchPortfolio() {\n    return dispatch=>{       \n        return fetch(`http://localhost:3001/portfolios/1`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            if (data.error) {\n                alert(data.error)\n            } else {\n                dispatch(addPortfolio(data))\n            }\n        })\n    }\n}\n\nexport const createTrade = tradeObj => {\n    return {\n        type: 'CREATE_TRADE',\n        payload: tradeObj\n    }\n}\n\nexport function createTradeFetch(tradeInfo){\n    return dispatch => fetch(`http://localhost:3001/trades`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(tradeInfo) \n    })\n    .then(r=>r.json())\n    .then(data=>{\n        if(data.error){\n            alert(data.error)\n        } else {\n            // console.log(\"Created!\")\n            // let user_json = JSON.parse(data.user)\n            let trade_json = JSON.parse(data.portfolio)\n            // console.log(data)\n            dispatch(createTrade(trade_json))\n        }\n    })\n}"]},"metadata":{},"sourceType":"module"}